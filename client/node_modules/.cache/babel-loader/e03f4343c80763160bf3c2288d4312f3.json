{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\client\\\\src\\\\component\\\\stripe-button\\\\stripe-button.component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { clearAll } from \"../../redux/cart/cart.actions\";\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\n\nfunction StripeCheckoutButton({\n  price,\n  clearAll,\n  history\n}) {\n  const priceForStripe = price * 100;\n  const publishableKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY;\n\n  const onToken = token => {\n    console.log('token: ', token);\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(response => {\n      alert('Payment is successful !, Thanks ');\n    }).catch(error => {\n      console.error('Payment error: ', JSON.parse(error));\n      alert('There was an issue with your payment, please sure that you use the provided credit card.');\n    });\n  };\n\n  const onClose = () => {\n    clearAll();\n    history.push('/');\n  };\n\n  return React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    panelLabel: \"Pay Now\",\n    name: \"Aihua E-Clothing Store\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: `Your total is $${price}`,\n    currency: \"AUD\",\n    amount: priceForStripe,\n    token: onToken,\n    stripeKey: publishableKey,\n    closed: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n}\n\nconst mapDispatchToProps = dispatch => ({\n  clearAll: () => dispatch(clearAll())\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(StripeCheckoutButton));","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/client/src/component/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","clearAll","connect","withRouter","axios","StripeCheckoutButton","price","history","priceForStripe","publishableKey","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","onToken","token","console","log","url","method","data","amount","then","response","alert","catch","error","JSON","parse","onClose","push","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,oBAAT,CAA8B;AAAEC,EAAAA,KAAF;AAASL,EAAAA,QAAT;AAAmBM,EAAAA;AAAnB,CAA9B,EAA4D;AACxD,QAAMC,cAAc,GAAGF,KAAK,GAAG,GAA/B;AACA,QAAMG,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,gCAAnC;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACAV,IAAAA,KAAK,CAAC;AACFa,MAAAA,GAAG,EAAE,SADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEZ,cADN;AAEFM,QAAAA;AAFE;AAHJ,KAAD,CAAL,CAOGO,IAPH,CAOQC,QAAQ,IAAI;AAChBC,MAAAA,KAAK,CAAC,kCAAD,CAAL;AACH,KATD,EASGC,KATH,CASSC,KAAK,IAAI;AACdV,MAAAA,OAAO,CAACU,KAAR,CAAc,iBAAd,EAAiCC,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAjC;AACAF,MAAAA,KAAK,CAAC,0FAAD,CAAL;AACH,KAZD;AAcH,GAhBD;;AAkBA,QAAMK,OAAO,GAAG,MAAM;AAClB3B,IAAAA,QAAQ;AACRM,IAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACH,GAHD;;AAKA,SACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,UAAU,EAAC,SAFf;AAGI,IAAA,IAAI,EAAC,wBAHT;AAII,IAAA,cAAc,MAJlB;AAKI,IAAA,eAAe,MALnB;AAMI,IAAA,KAAK,EAAC,gCANV;AAOI,IAAA,WAAW,EAAG,kBAAiBvB,KAAM,EAPzC;AAQI,IAAA,QAAQ,EAAC,KARb;AASI,IAAA,MAAM,EAAEE,cATZ;AAUI,IAAA,KAAK,EAAEK,OAVX;AAWI,IAAA,SAAS,EAAEJ,cAXf;AAYI,IAAA,MAAM,EAAEmB,OAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBH;;AAED,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACpC9B,EAAAA,QAAQ,EAAE,MAAM8B,QAAQ,CAAC9B,QAAQ,EAAT;AADY,CAAL,CAAnC;;AAIA,eAAeE,UAAU,CAAED,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAmCzB,oBAAnC,CAAF,CAAzB","sourcesContent":["import React from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { clearAll } from \"../../redux/cart/cart.actions\";\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nfunction StripeCheckoutButton({ price, clearAll, history }) {\r\n    const priceForStripe = price * 100;\r\n    const publishableKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY;\r\n\r\n    const onToken = token => {\r\n        console.log('token: ', token);\r\n        axios({\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token\r\n            }\r\n        }).then(response => {\r\n            alert('Payment is successful !, Thanks ');\r\n        }).catch(error => {\r\n            console.error('Payment error: ', JSON.parse(error));\r\n            alert('There was an issue with your payment, please sure that you use the provided credit card.');\r\n        })\r\n        \r\n    };\r\n\r\n    const onClose = () => {\r\n        clearAll();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <StripeCheckout\r\n            label=\"Pay Now\"\r\n            panelLabel=\"Pay Now\"\r\n            name=\"Aihua E-Clothing Store\"\r\n            billingAddress\r\n            shippingAddress\r\n            image=\"https://svgshare.com/i/CUz.svg\"\r\n            description={`Your total is $${price}`}\r\n            currency=\"AUD\"\r\n            amount={priceForStripe}\r\n            token={onToken}\r\n            stripeKey={publishableKey}\r\n            closed={onClose}\r\n        />\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearAll: () => dispatch(clearAll())\r\n})\r\n\r\nexport default withRouter( connect(null, mapDispatchToProps) (StripeCheckoutButton));\r\n"]},"metadata":{},"sourceType":"module"}