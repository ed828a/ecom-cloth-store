{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\component\\\\header\\\\Header.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./header.scss\";\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/logo.svg\"; // this is a special syntax in React for importing SVG\n\nimport { auth } from \"../../firebase/firebase.utils\";\nimport { connect } from 'react-redux'; // connect: high order component that lets use modify our component to have access the things related to redux. conect take 2 functions as parameters (the second one is optional), and return another high order component which wrap our component.\n\nimport CartIcon from \"../cart-icon/CartIcon\";\nimport CartDropdown from \"../cart-dropdown/CartDropdown\";\n\nfunction Header({\n  currentUser\n}) {\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"logo-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    className: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"option\",\n    to: \"/shop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"shop\"), React.createElement(Link, {\n    className: \"option\",\n    to: \"/shop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"contact\"), currentUser ? React.createElement(\"div\", {\n    className: \"option\",\n    onClick: () => auth.signOut(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"sign out\") : React.createElement(Link, {\n    className: \"option\",\n    to: \"/signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"sign in\"), React.createElement(CartIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(CartDropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n} // this naming can be anything but mapStateToProps is standard with redux codebases\n// as the function name indicates that this function map state to props, and return props\n// this props will be passed to our component wrapped in the last parentheses.\n// input state is root-reducer\n\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/component/header/Header.jsx"],"names":["React","Link","auth","connect","CartIcon","CartDropdown","Header","currentUser","signOut","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,eAAP;oGACgE;;AAEhE,SAASC,IAAT,QAAqB,+BAArB;AAEA,SAASC,OAAT,QAAuB,aAAvB,C,CAAsC;;AACtC,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAAiC;AAC7B,SACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAII,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAOKA,WAAW,GACR;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAE,MAAML,IAAI,CAACM,OAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADQ,GAKR,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZR,EAiBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CAJJ,EAuBI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,CADJ;AA2BH,C,CAED;AACA;AACA;AACA;;;AACA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCH,EAAAA,WAAW,EAAEG,KAAK,CAACC,IAAN,CAAWJ;AADQ,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACM,eAAD,CAAP,CAAyBH,MAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.scss\";\r\nimport { ReactComponent as Logo } from \"../../assets/logo.svg\"; // this is a special syntax in React for importing SVG\r\n\r\nimport { auth } from \"../../firebase/firebase.utils\";\r\n\r\nimport { connect} from 'react-redux'; // connect: high order component that lets use modify our component to have access the things related to redux. conect take 2 functions as parameters (the second one is optional), and return another high order component which wrap our component.\r\nimport CartIcon from \"../cart-icon/CartIcon\";\r\nimport CartDropdown from \"../cart-dropdown/CartDropdown\";\r\n\r\nfunction Header({ currentUser }) {\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"/\" className=\"logo-container\">\r\n                <Logo className=\"logo\" />\r\n            </Link>\r\n            <div className=\"options\">\r\n                <Link className=\"option\" to=\"/shop\">\r\n                    shop\r\n                </Link>\r\n                <Link className=\"option\" to=\"/shop\">\r\n                    contact\r\n                </Link>\r\n                {currentUser ? (\r\n                    <div className=\"option\" onClick={() => auth.signOut()}>\r\n                        sign out\r\n                    </div>\r\n                ) : (\r\n                    <Link className=\"option\" to=\"/signin\">\r\n                        sign in\r\n                    </Link>\r\n                )}\r\n\r\n                <CartIcon />\r\n            </div>\r\n            <CartDropdown />\r\n        </div>\r\n    );\r\n}\r\n\r\n// this naming can be anything but mapStateToProps is standard with redux codebases\r\n// as the function name indicates that this function map state to props, and return props\r\n// this props will be passed to our component wrapped in the last parentheses.\r\n// input state is root-reducer\r\nconst mapStateToProps = (state) => ({\r\n    currentUser: state.user.currentUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n"]},"metadata":{},"sourceType":"module"}