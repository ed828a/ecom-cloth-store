{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\component\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { Component } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signInWithGoogle, auth } from \"../../firebase/firebase.utils\";\nimport { SignInContainer, TitleContainer, ButtonsContainer } from \"./sign-in.styles\";\nimport { googleSignInStart } from '../../redux/user/user.action';\nimport { connect } from 'react_redux';\nexport class SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password,\n        isSignInClicked\n      } = this.state;\n      if (!isSignInClicked) return;\n\n      if (password.length < 8) {\n        alert(\"Password must be at least 8 charactors\");\n        return;\n      }\n\n      if (!email.includes(\"@\")) {\n        alert(\"Email is invalide\");\n        return;\n      }\n\n      try {\n        // const returnObject =\n        await auth.signInWithEmailAndPassword(email, password); // console.log('returnObject: ', returnObject);\n\n        this.setState({\n          email: \"\",\n          password: \"\"\n        }); // reset form\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      isSignInClicked: false\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(TitleContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      label: \"email\",\n      required: this.state.isSignInClicked ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      label: \"password\",\n      required: this.state.isSignInClicked ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(ButtonsContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      onClick: () => this.setState({\n        isSignInClicked: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"sign in\"), React.createElement(CustomButton, {\n      type: \"text\",\n      onClick: () => {\n        // this.setState({ isSignInClicked: false });\n        // signInWithGoogle();\n        googleSignInStart();\n      },\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"sign in with google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/component/sign-in/sign-in.component.jsx"],"names":["React","Component","FormInput","CustomButton","signInWithGoogle","auth","SignInContainer","TitleContainer","ButtonsContainer","googleSignInStart","connect","SignIn","constructor","props","handleSubmit","event","preventDefault","email","password","isSignInClicked","state","length","alert","includes","signInWithEmailAndPassword","setState","error","console","handleChange","name","value","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport { signInWithGoogle, auth } from \"../../firebase/firebase.utils\";\r\nimport {\r\n    SignInContainer,\r\n    TitleContainer,\r\n    ButtonsContainer\r\n} from \"./sign-in.styles\";\r\nimport { googleSignInStart } from '../../redux/user/user.action';\r\n\r\nimport { connect } from 'react_redux';\r\n\r\nexport class SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            isSignInClicked: false\r\n        };\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { email, password, isSignInClicked } = this.state;\r\n\r\n        if (!isSignInClicked) return;\r\n\r\n        if (password.length < 8) {\r\n            alert(\"Password must be at least 8 charactors\");\r\n            return;\r\n        }\r\n\r\n        if (!email.includes(\"@\")) {\r\n            alert(\"Email is invalide\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // const returnObject =\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            // console.log('returnObject: ', returnObject);\r\n\r\n            this.setState({ email: \"\", password: \"\" }); // reset form\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render() {\r\n\r\n        const { googleSignInStart } = this.props;\r\n        \r\n        return (\r\n            <SignInContainer>\r\n                <TitleContainer>I already have an account</TitleContainer>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                        label=\"email\"\r\n                        required={this.state.isSignInClicked ? true : false}\r\n                    />\r\n\r\n                    <FormInput\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                        label=\"password\"\r\n                        required={this.state.isSignInClicked ? true : false}\r\n                    />\r\n                    \r\n                    <ButtonsContainer>\r\n                        <CustomButton\r\n                            type=\"submit\"\r\n                            onClick={() =>\r\n                                this.setState({ isSignInClicked: true })\r\n                            }\r\n                        >\r\n                            sign in\r\n                        </CustomButton>\r\n\r\n                        <CustomButton\r\n                            type=\"text\"\r\n                            onClick={() => {\r\n                                // this.setState({ isSignInClicked: false });\r\n                                // signInWithGoogle();\r\n                                googleSignInStart();\r\n                            }}\r\n                            isGoogleSignIn\r\n                        >\r\n                            sign in with google\r\n                        </CustomButton>\r\n                    </ButtonsContainer>\r\n                </form>\r\n            </SignInContainer>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}