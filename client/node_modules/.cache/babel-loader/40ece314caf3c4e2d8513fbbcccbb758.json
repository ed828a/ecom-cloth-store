{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\pages\\\\shoppage\\\\shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport CollectionsOverview from '../../component/collections-overview/collections-overview.component';\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collectionpage/collection-page.component\";\nimport ErrorPage from \"../errorpage/ErrorPage\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nexport class ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionsRef = firestore.collection('collections');\n    collectionsRef.onSnapshot(); // Attaches a listener for QuerySnapshot events. You may either pass individual onNext and onError callbacks or pass a single observer object with next and error callbacks. The listener can be cancelled by calling the function that is returned when onSnapshot is called.\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId/*`,\n      component: ErrorPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default ShopPage;","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/pages/shoppage/shop.component.jsx"],"names":["React","Component","CollectionsOverview","Route","CollectionPage","ErrorPage","firestore","ShopPage","unsubscribeFromSnapshot","componentDidMount","collectionsRef","collection","onSnapshot","render","match","props","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,OAAO,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAEpCO,uBAFoC,GAEV,IAFU;AAAA;;AAIpCC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,cAAc,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAvB;AAEAD,IAAAA,cAAc,CAACE,UAAf,GAHe,CAGc;AAChC;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAGd,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACE,IAAK,gBAAjC;AAAkD,MAAA,SAAS,EAAGZ,cAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACE,IAAK,kBAA3B;AAA8C,MAAA,SAAS,EAAEX,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADJ;AAQH;;AArBmC;AAyBxC,eAAeE,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport CollectionsOverview from '../../component/collections-overview/collections-overview.component'\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionPage from \"../collectionpage/collection-page.component\";\r\nimport ErrorPage from \"../errorpage/ErrorPage\";\r\nimport { firestore } from \"../../firebase/firebase.utils\";\r\n\r\nexport class ShopPage extends Component {\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount(){\r\n        const collectionsRef = firestore.collection('collections');\r\n\r\n        collectionsRef.onSnapshot(); // Attaches a listener for QuerySnapshot events. You may either pass individual onNext and onError callbacks or pass a single observer object with next and error callbacks. The listener can be cancelled by calling the function that is returned when onSnapshot is called.\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n\r\n        return (\r\n            <div className=\"shop-page\">\r\n            <Route exact path={`${match.path}`} component={ CollectionsOverview } />\r\n            <Route exact path={`${match.path}/:collectionId`} component={ CollectionPage } />\r\n            <Route path={`${match.path}/:collectionId/*`} component={ErrorPage} />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ShopPage;\r\n"]},"metadata":{},"sourceType":"module"}