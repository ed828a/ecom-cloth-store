{"ast":null,"code":"import UserActionTypes from './user.types'; // pure function, just return an action object with two properties.\n\nexport const setCurrentUser = user => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user\n});\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n});\nexport const signInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user\n});\nexport const signInFailure = error => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error\n});\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n});\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START\n});\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS\n});\nexport const signOutFailure = error => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  payload: error\n});\nexport const signUpStart = userCredentials => ({\n  type: UserActionTypes.SIGN_UP_START,\n  payload: userCredentials\n});\nexport const signUpSuccess = ({\n  user,\n  addtionalData\n}) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: {\n    user,\n    addtionalData\n  } // user here stores userAuth object, not user data as others\n  // only for sagas to handle this action, reducer doesn't do any thing.\n\n});\nexport const signUpFailure = error => ({\n  type: UserActionTypes.SIGN_UP_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/redux/user/user.action.js"],"names":["UserActionTypes","setCurrentUser","user","type","SET_CURRENT_USER","payload","googleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","signInSuccess","SIGN_IN_SUCCESS","signInFailure","error","SIGN_IN_FAILURE","checkUserSession","CHECK_USER_SESSION","signOutStart","SIGN_OUT_START","signOutSuccess","SIGN_OUT_SUCCESS","signOutFailure","SIGN_OUT_FAILURE","signUpStart","userCredentials","SIGN_UP_START","signUpSuccess","addtionalData","SIGN_UP_SUCCESS","signUpFailure","SIGN_UP_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAGC,IAAI,KAAK;AACnCC,EAAAA,IAAI,EAAEH,eAAe,CAACI,gBADa;AAEnCC,EAAAA,OAAO,EAAEH;AAF0B,CAAL,CAA3B;AAKP,OAAO,MAAMI,iBAAiB,GAAG,OAAO;AACpCH,EAAAA,IAAI,EAAEH,eAAe,CAACO;AADc,CAAP,CAA1B;AAIP,OAAO,MAAMC,gBAAgB,GAAIC,gBAAD,KAAuB;AACnDN,EAAAA,IAAI,EAAEH,eAAe,CAACU,mBAD6B;AAEnDL,EAAAA,OAAO,EAAEI;AAF0C,CAAvB,CAAzB;AAKP,OAAO,MAAME,aAAa,GAAKT,IAAF,KAAa;AACtCC,EAAAA,IAAI,EAAEH,eAAe,CAACY,eADgB;AAEtCP,EAAAA,OAAO,EAAEH;AAF6B,CAAb,CAAtB;AAKP,OAAO,MAAMW,aAAa,GAAKC,KAAF,KAAc;AACvCX,EAAAA,IAAI,EAAEH,eAAe,CAACe,eADiB;AAEvCV,EAAAA,OAAO,EAAES;AAF8B,CAAd,CAAtB;AAKP,OAAO,MAAME,gBAAgB,GAAG,OAAO;AACnCb,EAAAA,IAAI,EAAEH,eAAe,CAACiB;AADa,CAAP,CAAzB;AAIP,OAAO,MAAMC,YAAY,GAAG,OAAO;AAC/Bf,EAAAA,IAAI,EAAEH,eAAe,CAACmB;AADS,CAAP,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAG,OAAO;AACjCjB,EAAAA,IAAI,EAAEH,eAAe,CAACqB;AADW,CAAP,CAAvB;AAIP,OAAO,MAAMC,cAAc,GAAIR,KAAD,KAAY;AACtCX,EAAAA,IAAI,EAAEH,eAAe,CAACuB,gBADgB;AAEtClB,EAAAA,OAAO,EAAES;AAF6B,CAAZ,CAAvB;AAKP,OAAO,MAAMU,WAAW,GAAIC,eAAD,KAAsB;AAC7CtB,EAAAA,IAAI,EAAEH,eAAe,CAAC0B,aADuB;AAE7CrB,EAAAA,OAAO,EAAEoB;AAFoC,CAAtB,CAApB;AAKP,OAAO,MAAME,aAAa,GAAG,CAAC;AAAEzB,EAAAA,IAAF;AAAQ0B,EAAAA;AAAR,CAAD,MAA8B;AACvDzB,EAAAA,IAAI,EAAEH,eAAe,CAAC6B,eADiC;AAEvDxB,EAAAA,OAAO,EAAE;AAAEH,IAAAA,IAAF;AAAQ0B,IAAAA;AAAR,GAF8C,CAGvD;AACA;;AAJuD,CAA9B,CAAtB;AAOP,OAAO,MAAME,aAAa,GAAGhB,KAAK,KAAK;AACnCX,EAAAA,IAAI,EAAEH,eAAe,CAAC+B,eADa;AAEnC1B,EAAAA,OAAO,EAAES;AAF0B,CAAL,CAA3B","sourcesContent":["import UserActionTypes from './user.types';\r\n\r\n// pure function, just return an action object with two properties.\r\nexport const setCurrentUser = user => ({\r\n    type: UserActionTypes.SET_CURRENT_USER,\r\n    payload: user\r\n});\r\n\r\nexport const googleSignInStart = () => ({\r\n    type: UserActionTypes.GOOGLE_SIGN_IN_START\r\n});\r\n\r\nexport const emailSignInStart = (emailAndPassword) => ({\r\n    type: UserActionTypes.EMAIL_SIGN_IN_START,\r\n    payload: emailAndPassword\r\n});\r\n\r\nexport const signInSuccess = ( user ) => ({\r\n    type: UserActionTypes.SIGN_IN_SUCCESS,\r\n    payload: user\r\n});\r\n\r\nexport const signInFailure = ( error ) => ({\r\n    type: UserActionTypes.SIGN_IN_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const checkUserSession = () => ({\r\n    type: UserActionTypes.CHECK_USER_SESSION\r\n});\r\n\r\nexport const signOutStart = () => ({\r\n    type: UserActionTypes.SIGN_OUT_START\r\n});\r\n\r\nexport const signOutSuccess = () => ({\r\n    type: UserActionTypes.SIGN_OUT_SUCCESS\r\n});\r\n\r\nexport const signOutFailure = (error) => ({\r\n    type: UserActionTypes.SIGN_OUT_FAILURE,\r\n    payload: error\r\n});\r\n\r\nexport const signUpStart = (userCredentials) => ({\r\n    type: UserActionTypes.SIGN_UP_START,\r\n    payload: userCredentials\r\n});\r\n\r\nexport const signUpSuccess = ({ user, addtionalData }) => ({\r\n    type: UserActionTypes.SIGN_UP_SUCCESS,\r\n    payload: { user, addtionalData }\r\n    // user here stores userAuth object, not user data as others\r\n    // only for sagas to handle this action, reducer doesn't do any thing.\r\n})\r\n\r\nexport const signUpFailure = error => ({\r\n    type: UserActionTypes.SIGN_UP_FAILURE,\r\n    payload: error\r\n})"]},"metadata":{},"sourceType":"module"}