{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\component\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport \"./cart-dropdown.scss\";\nimport React from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\"; // the reason that we use withRouter is because this component and its all parent components are not inside Switch section, not wrapped by Route tag.\n\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  toggleCartHidden\n}) => {\n  return React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    className: \"empty-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"your cart is empty\")), React.createElement(CustomButton, {\n    onClick: () => {\n      if (cartItems.length) {\n        toggleCartHidden();\n        history.push(\"/checkout\");\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Go to checkout\"));\n}; // const mapStateToProps = state => {\n//     // const {cart: { cartItems }} = state;\n//     return {\n//         cartItems: selectCartItems(state)\n//     };\n// };\n\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropdown));","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/component/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CustomButton","connect","CartItem","selectCartItems","createStructuredSelector","withRouter","toggleCartHidden","CartDropdown","cartItems","history","length","map","cartItem","id","push","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAO,sBAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAA+C;;AAC/C,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBH,EAAAA;AAAtB,CAAD,KAA8C;AAC/D,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,SAAS,CAACE,MAAV,GACGF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAClB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAKG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANR,CADJ,EAUI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAE,MAAM;AACX,UAAIJ,SAAS,CAACE,MAAd,EAAsB;AAClBJ,QAAAA,gBAAgB;AAChBG,QAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AACH;AACJ,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,CADJ;AAuBH,CAxBD,C,CA0BA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,eAAe,GAAGX,wBAAwB,CAAC;AAC7CI,EAAAA,SAAS,EAAEL;AADkC,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCX,EAAAA,gBAAgB,EAAE,MAAMW,QAAQ,CAACX,gBAAgB,EAAjB;AADI,CAAL,CAAnC;;AAIA,eAAeD,UAAU,CACrBJ,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,YAA7C,CADqB,CAAzB","sourcesContent":["import \"./cart-dropdown.scss\";\r\n\r\nimport React from \"react\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport { connect } from \"react-redux\";\r\nimport CartItem from \"../cart-item/cart-item.component\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { withRouter } from \"react-router-dom\"; // the reason that we use withRouter is because this component and its all parent components are not inside Switch section, not wrapped by Route tag.\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\r\n\r\nconst CartDropdown = ({ cartItems, history, toggleCartHidden }) => {\r\n    return (\r\n        <div className=\"cart-dropdown\">\r\n            <div className=\"cart-items\">\r\n                {cartItems.length ? (\r\n                    cartItems.map(cartItem => (\r\n                        <CartItem key={cartItem.id} item={cartItem} />\r\n                    ))\r\n                ) : (\r\n                    <span className=\"empty-message\">your cart is empty</span>\r\n                )}\r\n            </div>\r\n            <CustomButton\r\n                onClick={() => {\r\n                    if (cartItems.length) {\r\n                        toggleCartHidden();\r\n                        history.push(\"/checkout\");\r\n                    }\r\n                }}\r\n            >\r\n                Go to checkout\r\n            </CustomButton>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//     // const {cart: { cartItems }} = state;\r\n//     return {\r\n//         cartItems: selectCartItems(state)\r\n//     };\r\n// };\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleCartHidden: () => dispatch(toggleCartHidden())\r\n});\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(CartDropdown)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}