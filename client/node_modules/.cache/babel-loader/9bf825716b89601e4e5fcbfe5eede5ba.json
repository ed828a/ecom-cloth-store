{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\pages\\\\shoppage\\\\shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\"; // import CollectionPage from \"../collectionpage/collection-page.component\";\n\nimport ErrorPage from \"../errorpage/ErrorPage\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\"; // import { createStructuredSelector } from 'reselect';\n// import { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors'\n// import WithSpinner from \"../../component/with-spinner/with-spinner.component\";\n\nimport CollectionsOverviewContainer from \"../../component/collections-overview/collection-overview.container\";\nimport { CollectionPageContainer } from \"../collectionpage/collection-page.styles\"; // const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nexport class ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    const {\n      match,\n      isCollectionsLoaded\n    } = this.props; // console.log('loading: ', loading);\n\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}` // component={CollectionsOverview}\n      // render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} /> }\n      ,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId` // component={CollectionPage}\n      // render={props => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />}\n      ,\n      component: CollectionPageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId/*`,\n      component: ErrorPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n}); // const mapStateToProps = createStructuredSelector({\n//     isCollectionsLoaded: selectIsCollectionsLoaded\n// })\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/pages/shoppage/shop.component.jsx"],"names":["React","Component","Route","ErrorPage","connect","fetchCollectionsStartAsync","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","componentDidMount","props","componentWillUnmount","render","match","isCollectionsLoaded","path","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,QAA2C,+BAA3C,C,CACA;AACA;AACA;;AACA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,SAASC,uBAAT,QAAwC,0CAAxC,C,CAEA;;AAEA,OAAO,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAEpCQ,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEJ,MAAAA;AAAF,QAAiC,KAAKK,KAA5C;AACAL,IAAAA,0BAA0B;AAC7B;;AAEDM,EAAAA,oBAAoB,GAAG,CAEtB;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiC,KAAKJ,KAA5C,CADK,CAEL;;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,EAFxB,CAGI;AACA;AAJJ;AAKI,MAAA,SAAS,EAAET,4BALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACE,IAAK,gBAFxB,CAGI;AACA;AAJJ;AAKI,MAAA,SAAS,EAAER,uBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAgBI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACE,IAAK,kBADxB;AAEI,MAAA,SAAS,EAAEZ,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,CADJ;AAuBH;;AAvCmC;;AA0CxC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,0BAA0B,EAAE,MAAMY,QAAQ,CAACZ,0BAA0B,EAA3B;AADN,CAAL,CAAnC,C,CAIA;AACA;AACA;;;AAEA,eAAeD,OAAO,CAACc,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n// import CollectionPage from \"../collectionpage/collection-page.component\";\r\nimport ErrorPage from \"../errorpage/ErrorPage\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\r\n// import { createStructuredSelector } from 'reselect';\r\n// import { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors'\r\n// import WithSpinner from \"../../component/with-spinner/with-spinner.component\";\r\nimport CollectionsOverviewContainer from \"../../component/collections-overview/collection-overview.container\";\r\nimport { CollectionPageContainer } from \"../collectionpage/collection-page.styles\";\r\n\r\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nexport class ShopPage extends Component {\r\n\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { match, isCollectionsLoaded } = this.props;\r\n        // console.log('loading: ', loading);\r\n        \r\n\r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Route\r\n                    exact\r\n                    path={`${match.path}`}\r\n                    // component={CollectionsOverview}\r\n                    // render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} /> }\r\n                    component={CollectionsOverviewContainer}\r\n                    \r\n                />\r\n                <Route\r\n                    exact\r\n                    path={`${match.path}/:collectionId`}\r\n                    // component={CollectionPage}\r\n                    // render={props => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />}\r\n                    component={CollectionPageContainer}\r\n                />\r\n                <Route\r\n                    path={`${match.path}/:collectionId/*`}\r\n                    component={ErrorPage}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\n// const mapStateToProps = createStructuredSelector({\r\n//     isCollectionsLoaded: selectIsCollectionsLoaded\r\n// })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}