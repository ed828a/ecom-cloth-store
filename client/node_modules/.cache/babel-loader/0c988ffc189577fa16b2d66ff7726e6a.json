{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\client\\\\src\\\\component\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { SignUpContainer, SignupTitleContainer } from \"./sign-up.styles\";\nimport { signUpStart } from \"../../redux/user/user.action\";\nimport { connect } from \"react-redux\";\nexport const SignUp = props => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!displayName) {\n      alert(\"Display Name isn't entered, please try again\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"password don't match, please try again.\");\n      return;\n    } else if (password.length < 8) {\n      alert(\"Password must be at least 8 charactors\");\n      return;\n    } else if (!email.includes(\"@\")) {\n      alert(\"Email is invalid\");\n      return;\n    }\n\n    const {\n      signUpStart\n    } = props;\n    signUpStart(email, password, displayName);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(SignupTitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"I don't have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Sign up with your name, email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    id: \"displayName\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email \",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"email\",\n    id: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"password\",\n    id: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"confirm password\",\n    id: \"confirmPassword\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Sign up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/client/src/component/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","SignUpContainer","SignupTitleContainer","signUpStart","connect","SignUp","props","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","length","includes","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport { SignUpContainer, SignupTitleContainer } from \"./sign-up.styles\";\r\nimport { signUpStart } from \"../../redux/user/user.action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport const SignUp = props => {\r\n    const [userCredentials, setUserCredentials] = useState({\r\n        displayName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    });\r\n\r\n    const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!displayName) {\r\n            alert(\"Display Name isn't entered, please try again\");\r\n            return;\r\n        }\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\"password don't match, please try again.\");\r\n            return;\r\n        } else if (password.length < 8) {\r\n            alert(\"Password must be at least 8 charactors\");\r\n            return;\r\n        } else if (!email.includes(\"@\")) {\r\n            alert(\"Email is invalid\");\r\n            return;\r\n        }\r\n\r\n        const { signUpStart } = props;\r\n        signUpStart(email, password, displayName);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setUserCredentials({\r\n            ...userCredentials,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SignUpContainer>\r\n            <SignupTitleContainer>I don't have an account</SignupTitleContainer>\r\n            <span>Sign up with your name, email and password</span>\r\n            <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    type=\"text\"\r\n                    name=\"displayName\"\r\n                    value={displayName}\r\n                    onChange={handleChange}\r\n                    label=\"Display Name\"\r\n                    id=\"displayName\"\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type=\"email \"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                    label=\"email\"\r\n                    id=\"email\"\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    label=\"password\"\r\n                    id=\"password\"\r\n                    required\r\n                />\r\n                <FormInput\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={confirmPassword}\r\n                    onChange={handleChange}\r\n                    label=\"confirm password\"\r\n                    id=\"confirmPassword\"\r\n                    required\r\n                />\r\n\r\n                <CustomButton type=\"submit\">Sign up</CustomButton>\r\n            </form>\r\n        </SignUpContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (email, password, displayName) =>\r\n        dispatch(signUpStart({ email, password, displayName }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}