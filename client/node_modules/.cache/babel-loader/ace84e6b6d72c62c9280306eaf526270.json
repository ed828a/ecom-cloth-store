{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\pages\\\\shoppage\\\\shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport CollectionsOverview from \"../../component/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collectionpage/collection-page.component\";\nimport ErrorPage from \"../errorpage/ErrorPage\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionsFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from \"../../component/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nexport class ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    const {\n      match,\n      loading\n    } = this.props; // const { loading } = this.state;\n\n    console.log('loading: ', loading);\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}` // component={CollectionsOverview}\n      ,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId` // component={CollectionPage}\n      ,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId/*`,\n      component: ErrorPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  loading: selectIsCollectionsFetching\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/pages/shoppage/shop.component.jsx"],"names":["React","Component","CollectionsOverview","Route","CollectionPage","ErrorPage","connect","fetchCollectionsStartAsync","createStructuredSelector","selectIsCollectionsFetching","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","componentWillUnmount","render","match","loading","console","log","path","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,2BAAT,QAA4C,iCAA5C;AACA,OAAOC,WAAP,MAAwB,qDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACR,mBAAD,CAAlD;AACA,MAAMU,yBAAyB,GAAGF,WAAW,CAACN,cAAD,CAA7C;AAEA,OAAO,MAAMS,QAAN,SAAuBZ,SAAvB,CAAiC;AAEpCa,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEP,MAAAA;AAAF,QAAiC,KAAKQ,KAA5C;AACAR,IAAAA,0BAA0B;AAC7B;;AAEDS,EAAAA,oBAAoB,GAAG,CAEtB;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKJ,KAAhC,CADK,CAEL;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,OAAzB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAED,KAAK,CAACI,IAAK,EAFxB,CAGI;AAHJ;AAII,MAAA,MAAM,EAAGP,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEI;AAA3C,SAAwDJ,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACI,IAAK,gBAFxB,CAGI;AAHJ;AAII,MAAA,MAAM,EAAEP,KAAK,IAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEI;AAAtC,SAAmDJ,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAcI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACI,IAAK,kBADxB;AAEI,MAAA,SAAS,EAAEjB,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CADJ;AAqBH;;AApCmC;;AAuCxC,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,MAAMkB,eAAe,GAAGjB,wBAAwB,CAAC;AAC7CW,EAAAA,OAAO,EAAEV;AADoC,CAAD,CAAhD;AAIA,eAAeH,OAAO,CAACmB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport CollectionsOverview from \"../../component/collections-overview/collections-overview.component\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CollectionPage from \"../collectionpage/collection-page.component\";\r\nimport ErrorPage from \"../errorpage/ErrorPage\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectIsCollectionsFetching } from '../../redux/shop/shop.selectors'\r\nimport WithSpinner from \"../../component/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nexport class ShopPage extends Component {\r\n\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { match, loading } = this.props;\r\n        // const { loading } = this.state;\r\n        console.log('loading: ', loading);\r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Route\r\n                    exact\r\n                    path={`${match.path}`}\r\n                    // component={CollectionsOverview}\r\n                    render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} /> }\r\n                    \r\n                />\r\n                <Route\r\n                    exact\r\n                    path={`${match.path}/:collectionId`}\r\n                    // component={CollectionPage}\r\n                    render={props => <CollectionPageWithSpinner isLoading={loading} {...props} />}\r\n                />\r\n                <Route\r\n                    path={`${match.path}/:collectionId/*`}\r\n                    component={ErrorPage}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    loading: selectIsCollectionsFetching\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}