{"ast":null,"code":"/* \r\n  firebase import is in order, \r\n  1. first is import firebase from firebase/app\r\n  2. then you can import firestore under firebase\r\n  3. then you can import auth under firebase\r\n  so firebase is the base of firestore and auth.\r\n*/\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'; // const firebaseConfig = {\n//   apiKey: process.env.REACT_APP_API_KEY,\n//   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n//   databaseURL: process.env.REACT_APP_DATA_BASE_URL,\n//   projectId: process.env.REACT_APP_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n//   appId: process.env.REACT_APP_APP_ID,\n//   measurementId: process.env.REACT_APP_MEASUREMENT_ID\n// };\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCDU1xBiX07iW74fk-Hle9TM7oF2GwXO-E\",\n  authDomain: \"webdev-c9039.firebaseapp.com\",\n  databaseURL: \"https://webdev-c9039.firebaseio.com\",\n  projectId: \"webdev-c9039\",\n  storageBucket: \"webdev-c9039.appspot.com\",\n  messagingSenderId: \"1055330796052\",\n  appId: \"1:1055330796052:web:9ec8b4ca42650286589d01\",\n  measurementId: \"G-7SNP0LP9KW\"\n};\nexport const createUserProfileDocument = async (userAuth, addtionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`); // console.log('uid: ', userAuth.uid);\n\n  try {\n    const snapShot = await userRef.get(); // console.log('firestore return: ', snapShot);\n\n    if (!snapShot.exists) {\n      // this is the standard to create a node in firestore.\n      const {\n        displayName,\n        email\n      } = userAuth;\n      const createAt = new Date();\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...addtionalData\n      });\n    }\n  } catch (error) {\n    console.log('firestore error when creating user: ', error.message);\n  } // console.log(\"run to here\");\n\n\n  return userRef; // in case we still use userRef to do other things.\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // google Authentication \n\nconst provider = new firebase.auth.GoogleAuthProvider(); // use google pop-up for sign-in\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","addtionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA;;;;;;;AAOA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,8BAFS;AAGrBC,EAAAA,WAAW,EAAE,qCAHQ;AAIrBC,EAAAA,SAAS,EAAE,cAJU;AAKrBC,EAAAA,aAAa,EAAE,0BALM;AAMrBC,EAAAA,iBAAiB,EAAE,eANE;AAOrBC,EAAAA,KAAK,EAAE,4CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;AAYA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,aAAjB,KAAmC;AAC1E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB,CAH0E,CAI1E;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CADE,CAEF;;AACA,QAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAAE;AACpB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAwBV,QAA9B;AACA,YAAMW,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,QAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD;AACF,GAbD,CAaE,OAAOa,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDF,KAAK,CAACG,OAA1D;AACD,GArByE,CAuB1E;;;AACA,SAAOf,OAAP,CAxB0E,CAwB1D;AACjB,CAzBM,C,CA2BP;;AACAb,QAAQ,CAAC6B,aAAT,CAAuB5B,cAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AACA,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB,C,CACA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["/* \r\n  firebase import is in order, \r\n  1. first is import firebase from firebase/app\r\n  2. then you can import firestore under firebase\r\n  3. then you can import auth under firebase\r\n  so firebase is the base of firestore and auth.\r\n*/\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore'; \r\nimport 'firebase/auth';\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: process.env.REACT_APP_API_KEY,\r\n//   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n//   databaseURL: process.env.REACT_APP_DATA_BASE_URL,\r\n//   projectId: process.env.REACT_APP_PROJECT_ID,\r\n//   storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n//   messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n//   appId: process.env.REACT_APP_APP_ID,\r\n//   measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n// };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCDU1xBiX07iW74fk-Hle9TM7oF2GwXO-E\",\r\n  authDomain: \"webdev-c9039.firebaseapp.com\",\r\n  databaseURL: \"https://webdev-c9039.firebaseio.com\",\r\n  projectId: \"webdev-c9039\",\r\n  storageBucket: \"webdev-c9039.appspot.com\",\r\n  messagingSenderId: \"1055330796052\",\r\n  appId: \"1:1055330796052:web:9ec8b4ca42650286589d01\",\r\n  measurementId: \"G-7SNP0LP9KW\"\r\n};\r\n\r\n\r\nexport const createUserProfileDocument = async (userAuth, addtionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  // console.log('uid: ', userAuth.uid);\r\n \r\n  try {\r\n    const snapShot = await userRef.get();\r\n    // console.log('firestore return: ', snapShot);\r\n    if(!snapShot.exists){ // this is the standard to create a node in firestore.\r\n      const { displayName, email} = userAuth;\r\n      const createAt = new Date();\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createAt,\r\n        ...addtionalData\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log('firestore error when creating user: ', error.message);\r\n  }\r\n  \r\n  // console.log(\"run to here\");\r\n  return userRef; // in case we still use userRef to do other things.\r\n}\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig); \r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// google Authentication \r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n// use google pop-up for sign-in\r\nprovider.setCustomParameters({ prompt: 'select_account' }); \r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}