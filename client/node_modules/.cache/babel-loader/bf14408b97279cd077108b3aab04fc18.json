{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport { Switch, Route } from 'react-router-dom';\nimport ShopPage from './pages/shoppage/ShopPage';\nimport Header from './component/header/Header';\nimport SignInSignUp from './component/sign-in-sign-up/SignInSignUp';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.action';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      // this.setState({ currentUser: userAuth });\n      if (userAuth) {\n        const userRef = createUserProfileDocument(userAuth); // update currentUser, .data() does't get id propery.\n\n        (await userRef).onSnapshot(snapShot => {\n          setCurrentUser({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          }); // console.log('currentUser:', this.state.currentUser);\n        });\n      } else {\n        this.setState({\n          currentUser: userAuth\n        });\n      }\n\n      console.log(\"user: \", userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n} // dispatch function is a way for redux to know that whatever object passing in is going to be an action object that redux will passing to every reducer.\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/App.js"],"names":["React","Component","HomePage","Switch","Route","ShopPage","Header","SignInSignUp","auth","createUserProfileDocument","connect","setCurrentUser","App","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","currentUser","id","data","setState","console","log","componentWillUnmount","render","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAGA,OAAO,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCY,mBADiC,GACX,IADW;AAAA;;AAGjCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACH,MAAAA;AAAD,QAAmB,KAAKI,KAA9B;AAEA,SAAKF,mBAAL,GAA2BL,IAAI,CAACQ,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AACrE;AAEA,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAGT,yBAAyB,CAACQ,QAAD,CAAzC,CADY,CAGZ;;AACA,SAAC,MAAMC,OAAP,EAAgBC,UAAhB,CAA2BC,QAAQ,IAAI;AACrCT,UAAAA,cAAc,CAAC;AACbU,YAAAA,WAAW,EAAE;AACXC,cAAAA,EAAE,EAAEF,QAAQ,CAACE,EADF;AAEX,iBAAGF,QAAQ,CAACG,IAAT;AAFQ;AADA,WAAD,CAAd,CADqC,CAOrC;AACD,SARD;AAUD,OAdD,MAcO;AACL,aAAKC,QAAL,CAAc;AAAEH,UAAAA,WAAW,EAAEJ;AAAf,SAAd;AACD;;AAEDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,QAAtB;AACD,KAtB0B,CAA3B;AAuBD;;AAEDU,EAAAA,oBAAoB,GAAG;AACrB,SAAKd,mBAAL;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAE1B,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAEG,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEE,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AA9CgC,C,CAiDnC;;AACA,MAAMsB,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,cAAc,EAAGoB,IAAD,IAAUD,QAAQ,CAACnB,cAAc,CAACoB,IAAD,CAAf;AADM,CAAf,CAA3B;;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCjB,GAAlC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport { Switch, Route } from 'react-router-dom'\nimport ShopPage from './pages/shoppage/ShopPage';\nimport Header from './component/header/Header';\nimport SignInSignUp from './component/sign-in-sign-up/SignInSignUp';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'\n\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.action'\n\n\nexport class App extends Component {  \n  unsubscribeFromAuth = null;  \n\n  componentDidMount() {\n    const {setCurrentUser} = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      // this.setState({ currentUser: userAuth });\n      \n      if (userAuth) {\n        const userRef = createUserProfileDocument(userAuth);\n\n        // update currentUser, .data() does't get id propery.\n        (await userRef).onSnapshot(snapShot => {\n          setCurrentUser({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n          // console.log('currentUser:', this.state.currentUser);\n        });\n        \n      } else {\n        this.setState({ currentUser: userAuth });\n      }\n\n      console.log(\"user: \", userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch >\n          <Route exact path='/' component={HomePage} />\n          <Route exact path='/shop' component={ShopPage} />\n          <Route path='/signin' component={SignInSignUp} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\n// dispatch function is a way for redux to know that whatever object passing in is going to be an action object that redux will passing to every reducer.\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}