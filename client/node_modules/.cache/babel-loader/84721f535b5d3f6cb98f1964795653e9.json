{"ast":null,"code":"// Utility functions allow us to keep our files clean and organize functions that we may need in multiple files in one location.\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const itemToBeGone = cartItems.find(item => item.id === cartItemToRemove.id);\n};","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","itemToBeGone","item"],"mappings":"AAAA;AAEA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAEvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAAzB;;AAEA,MAAIH,gBAAJ,EAAsB;AAClB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GAAmC,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KAAnC,GAAqFH,QAA/G,CAAP;AACH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP;AACH,CATM;AAWP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D,QAAMC,YAAY,GAAGV,SAAS,CAACG,IAAV,CAAeQ,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYI,gBAAgB,CAACJ,EAApD,CAArB;AAEH,CAHM","sourcesContent":["// Utility functions allow us to keep our files clean and organize functions that we may need in multiple files in one location.\r\n\r\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\r\n\r\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\r\n\r\n    if (existingCartItem) {\r\n        return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem, quantity: cartItem.quantity + 1} : cartItem);\r\n    }\r\n\r\n    return [...cartItems, {...cartItemToAdd, quantity: 1}];\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    const itemToBeGone = cartItems.find(item => item.id === cartItemToRemove.id);\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}