{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\component\\\\cart-icon\\\\cart-icon.component.jsx\";\nimport \"./cart-icon.scss\";\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\n\nfunction CartIcon({\n  toggleCartHidden,\n  itemCount\n}) {\n  console.log(\"itemCount: \", itemCount);\n  return React.createElement(\"div\", {\n    className: \"cart-icon\",\n    onClick: toggleCartHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(ShoppingIcon, {\n    className: \"shopping-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"item-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, itemCount, \" \"));\n}\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst mapStateToProps = ({\n  cart: {\n    cartItems\n  }\n}) => {\n  console.log('I am being called');\n  return {\n    // itemCount: cartItems.reduce((accumulatedQuantity, cartItem) => {\n    //     return accumulatedQuantity + cartItem.quantity;\n    // }, 0)\n    itemCount: selectCartItemsCount\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/component/cart-icon/cart-icon.component.jsx"],"names":["React","connect","toggleCartHidden","selectCartItemsCount","CartIcon","itemCount","console","log","mapDispatchToProps","dispatch","mapStateToProps","cart","cartItems"],"mappings":";AAAA,OAAO,kBAAP;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,oBAAT,QAAqC,iCAArC;;AAEA,SAASC,QAAT,CAAkB;AAAEF,EAAAA,gBAAF;AAAoBG,EAAAA;AAApB,CAAlB,EAAmD;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,SAA3B;AACA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEH,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BG,SAA9B,MAFJ,CADJ;AAMH;;AAED,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpCP,EAAAA,gBAAgB,EAAE,MAAMO,QAAQ,CAACP,gBAAgB,EAAjB;AADI,CAAL,CAAnC;;AAIA,MAAMQ,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAR,CAAD,KAA6B;AACjDN,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,SAAQ;AACJ;AACA;AACA;AACAF,IAAAA,SAAS,EAAEF;AAJP,GAAR;AAMH,CATD;;AAWA,eAAeF,OAAO,CAACS,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CJ,QAA7C,CAAf","sourcesContent":["import \"./cart-icon.scss\";\r\nimport { ReactComponent as ShoppingIcon } from \"../../assets/shopping-bag.svg\";\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\r\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\r\n\r\nfunction CartIcon({ toggleCartHidden, itemCount }) {\r\n    console.log(\"itemCount: \", itemCount);\r\n    return (\r\n        <div className=\"cart-icon\" onClick={toggleCartHidden}>\r\n            <ShoppingIcon className=\"shopping-icon\" />\r\n            <span className=\"item-count\">{itemCount} </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleCartHidden: () => dispatch(toggleCartHidden())\r\n});\r\n\r\nconst mapStateToProps = ({ cart: { cartItems } }) => {\r\n    console.log('I am being called');\r\n\r\n    return ({\r\n        // itemCount: cartItems.reduce((accumulatedQuantity, cartItem) => {\r\n        //     return accumulatedQuantity + cartItem.quantity;\r\n        // }, 0)\r\n        itemCount: selectCartItemsCount\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\r\n"]},"metadata":{},"sourceType":"module"}