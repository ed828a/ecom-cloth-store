{"ast":null,"code":"// Utility functions allow us to keep our files clean and organize functions that we may need in multiple files in one location.\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const index = cartItems.indexOf(cartItemToRemove);\n  if (index != -1) cartItems.splice(index, 1);\n  return [...cartItems];\n};","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","index","indexOf","splice"],"mappings":"AAAA;AAEA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAEvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAAzB;;AAEA,MAAIH,gBAAJ,EAAsB;AAClB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GAAmC,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KAAnC,GAAqFH,QAA/G,CAAP;AACH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP;AACH,CATM;AAWP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAE/D,QAAMC,KAAK,GAAGV,SAAS,CAACW,OAAV,CAAkBF,gBAAlB,CAAd;AAEA,MAAGC,KAAK,IAAI,CAAC,CAAb,EAAgBV,SAAS,CAACY,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AAEhB,SAAO,CAAC,GAAGV,SAAJ,CAAP;AACH,CAPM","sourcesContent":["// Utility functions allow us to keep our files clean and organize functions that we may need in multiple files in one location.\r\n\r\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\r\n\r\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\r\n\r\n    if (existingCartItem) {\r\n        return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem, quantity: cartItem.quantity + 1} : cartItem);\r\n    }\r\n\r\n    return [...cartItems, {...cartItemToAdd, quantity: 1}];\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\r\n    \r\n    const index = cartItems.indexOf(cartItemToRemove);\r\n\r\n    if(index != -1) cartItems.splice(index, 1);\r\n\r\n    return [...cartItems];    \r\n}"]},"metadata":{},"sourceType":"module"}