{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\component\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\"; // the reason that we use withRouter is because this component and its all parent components are not inside Switch section, not wrapped by Route tag.\n\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { CartDropdownContainer, CartItemsContainer, GoToCheckoutContainer, EmptyMessageContainer } from \"./cart-dropdown.styles\"; // const CartDropdown = ({ cartItems, history, toggleCartHidden }) => {\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => {\n  return React.createElement(CartDropdownContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(CartItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })) : React.createElement(EmptyMessageContainer, {\n    className: \"empty-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"your cart is empty\")), React.createElement(GoToCheckoutContainer, {\n    onClick: () => {\n      if (cartItems.length) {\n        dispatch(toggleCartHidden()); // shortcut of dispatch\n\n        history.push(\"/checkout\");\n      } else {\n        alert(\"Please select some items before checking out.\");\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Go to checkout\"));\n}; // const mapStateToProps = state => {\n//     // const {cart: { cartItems }} = state;\n//     return {\n//         cartItems: selectCartItems(state)\n//     };\n// };\n\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n}); // const mapDispatchToProps = dispatch => ({\n//     toggleCartHidden: () => dispatch(toggleCartHidden())\n// });\n// export default withRouter(\n//     connect(mapStateToProps, mapDispatchToProps)(CartDropdown)\n// );\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/component/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","CartItem","selectCartItems","createStructuredSelector","withRouter","toggleCartHidden","CartDropdownContainer","CartItemsContainer","GoToCheckoutContainer","EmptyMessageContainer","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","alert","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAA+C;;AAC/C,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,EAAoDC,qBAApD,EAA2EC,qBAA3E,QAAwG,wBAAxG,C,CAEA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AACvD,SACI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,SAAS,CAACG,MAAV,GACGH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAClB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAKG,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAC,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANR,CADJ,EAUI,oBAAC,qBAAD;AACI,IAAA,OAAO,EAAE,MAAM;AACX,UAAIL,SAAS,CAACG,MAAd,EAAsB;AAClBD,QAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR,CADkB,CACY;;AAC9BO,QAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACH,OAHD,MAGO;AACHC,QAAAA,KAAK,CAAC,+CAAD,CAAL;AACH;AACJ,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,CADJ;AAyBH,CA1BD,C,CA4BA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,eAAe,GAAGjB,wBAAwB,CAAC;AAC7CQ,EAAAA,SAAS,EAAET;AADkC,CAAD,CAAhD,C,CAIA;AACA;AACA;AAEA;AACA;AACA;;AACA,eAAeE,UAAU,CACrBJ,OAAO,CAACoB,eAAD,CAAP,CAAyBV,YAAzB,CADqB,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CartItem from \"../cart-item/cart-item.component\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { withRouter } from \"react-router-dom\"; // the reason that we use withRouter is because this component and its all parent components are not inside Switch section, not wrapped by Route tag.\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\r\nimport { CartDropdownContainer, CartItemsContainer, GoToCheckoutContainer, EmptyMessageContainer } from \"./cart-dropdown.styles\";\r\n\r\n// const CartDropdown = ({ cartItems, history, toggleCartHidden }) => {\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => {\r\n    return (\r\n        <CartDropdownContainer>\r\n            <CartItemsContainer >\r\n                {cartItems.length ? (\r\n                    cartItems.map(cartItem => (\r\n                        <CartItem key={cartItem.id} item={cartItem} />\r\n                    ))\r\n                ) : (\r\n                    <EmptyMessageContainer className=\"empty-message\">your cart is empty</EmptyMessageContainer>\r\n                )}\r\n            </CartItemsContainer>\r\n            <GoToCheckoutContainer\r\n                onClick={() => {\r\n                    if (cartItems.length) {\r\n                        dispatch(toggleCartHidden()); // shortcut of dispatch\r\n                        history.push(\"/checkout\");\r\n                    } else {\r\n                        alert(\"Please select some items before checking out.\");\r\n                    }\r\n                }}\r\n            >\r\n                Go to checkout\r\n            </GoToCheckoutContainer>\r\n        </CartDropdownContainer>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//     // const {cart: { cartItems }} = state;\r\n//     return {\r\n//         cartItems: selectCartItems(state)\r\n//     };\r\n// };\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems\r\n});\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     toggleCartHidden: () => dispatch(toggleCartHidden())\r\n// });\r\n\r\n// export default withRouter(\r\n//     connect(mapStateToProps, mapDispatchToProps)(CartDropdown)\r\n// );\r\nexport default withRouter(\r\n    connect(mapStateToProps)(CartDropdown)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}