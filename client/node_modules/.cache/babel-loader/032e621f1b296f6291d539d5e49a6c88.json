{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\component\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { SignInContainer, TitleContainer, ButtonsContainer } from \"./sign-in.styles\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.action\";\nimport { connect } from \"react-redux\";\nexport const SignIn = props => {\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const [isSignInClicked, setIsSignInClicked] = useState(false);\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!isSignInClicked) return;\n\n    if (password.length < 8) {\n      alert(\"Password must be at least 8 charactors\");\n      return;\n    }\n\n    if (!email.includes(\"@\")) {\n      alert(\"Email is invalide\");\n      return;\n    }\n\n    const {\n      emailSignInStart\n    } = props;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const {\n    googleSignInStart\n  } = props;\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(TitleContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"email\",\n    required: isSignInClicked ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"password\",\n    required: isSignInClicked ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(ButtonsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    onClick: () => setIsSignInClicked(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"sign in\"), React.createElement(CustomButton //  because this button is inside the form, the default type is still submit, button type won't submit the form.\n  , {\n    type: \"button\",\n    onClick: () => {\n      googleSignInStart();\n    },\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"sign in with google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/component/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","SignInContainer","TitleContainer","ButtonsContainer","googleSignInStart","emailSignInStart","connect","SignIn","props","userCredentials","setUserCredentials","email","password","isSignInClicked","setIsSignInClicked","handleSubmit","event","preventDefault","length","alert","includes","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport {\r\n    SignInContainer,\r\n    TitleContainer,\r\n    ButtonsContainer\r\n} from \"./sign-in.styles\";\r\nimport {\r\n    googleSignInStart,\r\n    emailSignInStart\r\n} from \"../../redux/user/user.action\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nexport const SignIn = props => {\r\n    // const [email, setEmail] = useState(\"\");\r\n    // const [password, setPassword] = useState(\"\");\r\n    const [userCredentials, setUserCredentials] = useState({email: '', password: ''});\r\n    const [isSignInClicked, setIsSignInClicked] = useState(false);\r\n    const {email, password} = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if (!isSignInClicked) return;\r\n\r\n        if (password.length < 8) {\r\n            alert(\"Password must be at least 8 charactors\");\r\n            return;\r\n        }\r\n\r\n        if (!email.includes(\"@\")) {\r\n            alert(\"Email is invalide\");\r\n            return;\r\n        }\r\n\r\n        const { emailSignInStart } = props;\r\n        emailSignInStart(email, password);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        setUserCredentials({...userCredentials, [name]: value});\r\n\r\n    };\r\n\r\n    const { googleSignInStart } = props;\r\n\r\n    return (\r\n        <SignInContainer>\r\n            <TitleContainer>I already have an account</TitleContainer>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    onChange={handleChange}\r\n                    label=\"email\"\r\n                    required={isSignInClicked ? true : false}\r\n                />\r\n\r\n                <FormInput\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    value={password}\r\n                    onChange={handleChange}\r\n                    label=\"password\"\r\n                    required={isSignInClicked ? true : false}\r\n                />\r\n\r\n                <ButtonsContainer>\r\n                    <CustomButton\r\n                        type=\"submit\"\r\n                        onClick={() => setIsSignInClicked(true)}\r\n                    >\r\n                        sign in\r\n                    </CustomButton>\r\n\r\n                    <CustomButton\r\n                        //  because this button is inside the form, the default type is still submit, button type won't submit the form.\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            googleSignInStart();\r\n                        }}\r\n                        isGoogleSignIn\r\n                    >\r\n                        sign in with google\r\n                    </CustomButton>\r\n                </ButtonsContainer>\r\n            </form>\r\n        </SignInContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) =>\r\n        dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}