{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\component\\\\cart-dropdown\\\\CartDropdown.jsx\";\nimport \"./cart-dropdown.scss\";\nimport React from \"react\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport CartItem from \"../cart-item/CartItem\";\nimport { connect } from \"react-redux\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\nimport { withRouter } from \"react-router-dom\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  toggleCartHidden\n}) => {\n  return React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(item => React.createElement(CartItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    className: \"empty-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Your cart is empty\")), React.createElement(CustomButton, {\n    onClick: () => {\n      toggleCartHidden();\n      history.push(\"/checkout\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"go to checkout\"));\n};\n\nconst mapStateToProps = state => ({\n  cartItems: selectCartItems(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropdown)); // connect passes dispatch into our components as a prop if we don't supply the second","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/component/cart-dropdown/CartDropdown.jsx"],"names":["React","CustomButton","CartItem","connect","selectCartItems","toggleCartHidden","withRouter","CartDropdown","cartItems","history","length","map","item","id","push","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAO,sBAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBJ,EAAAA;AAAtB,CAAD,KAA8C;AAC/D,SACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,SAAS,CAACE,MAAV,GACGF,SAAS,CAACG,GAAV,CAAcC,IAAI,IACd,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,GAKG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANR,CADJ,EAUI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAE,MAAM;AACXP,MAAAA,gBAAgB;AAChBI,MAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,CADJ;AAqBH,CAtBD;;AAwBA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAAER,EAAAA,SAAS,EAAEJ,eAAe,CAACY,KAAD;AAA5B,CAAL,CAA7B;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,gBAAgB,EAAE,MAAMa,QAAQ,CAACb,gBAAgB,EAAjB;AADI,CAAL,CAAnC;;AAIA,eAAeC,UAAU,CACrBH,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,YAA7C,CADqB,CAAzB,C,CAIA","sourcesContent":["import \"./cart-dropdown.scss\";\r\n\r\nimport React from \"react\";\r\nimport CustomButton from \"../custom-button/CustomButton\";\r\nimport CartItem from \"../cart-item/CartItem\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst CartDropdown = ({ cartItems, history, toggleCartHidden }) => {\r\n    return (\r\n        <div className=\"cart-dropdown\">\r\n            <div className=\"cart-items\">\r\n                {cartItems.length ? (\r\n                    cartItems.map(item => (\r\n                        <CartItem key={item.id} item={item} />\r\n                    ))\r\n                ) : (\r\n                    <span className=\"empty-message\">Your cart is empty</span>\r\n                )}\r\n            </div>\r\n            <CustomButton\r\n                onClick={() => {\r\n                    toggleCartHidden();\r\n                    history.push(\"/checkout\");\r\n                }}\r\n            >\r\n                go to checkout\r\n            </CustomButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({ cartItems: selectCartItems(state) });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleCartHidden: () => dispatch(toggleCartHidden())\r\n});\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(CartDropdown)\r\n);\r\n\r\n// connect passes dispatch into our components as a prop if we don't supply the second\r\n"]},"metadata":{},"sourceType":"module"}