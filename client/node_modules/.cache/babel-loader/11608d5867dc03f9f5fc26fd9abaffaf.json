{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport ShopPage from './pages/shoppage/ShopPage';\nimport Header from './component/header/Header';\nimport SignInSignUp from './component/sign-in-sign-up/SignInSignUp';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.action';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport CheckOut from './pages/checkoutpage/CheckOut';\nimport CollectionPage from './pages/collection/CollectionPage';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = createUserProfileDocument(userAuth); // update currentUser, .data() does't get id propery, snapshot has id property\n\n        (await userRef).onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      } else {\n        setCurrentUser(userAuth);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop/:collectionId\",\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      paht: \"/checkout\",\n      component: CheckOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : React.createElement(SignInSignUp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); // dispatch function is a way for redux to know that whatever object passing in is going to be an action object that redux will passing to every reducer.\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/App.js"],"names":["React","Component","HomePage","Switch","Route","Redirect","ShopPage","Header","SignInSignUp","auth","createUserProfileDocument","connect","setCurrentUser","selectCurrentUser","createStructuredSelector","CheckOut","CollectionPage","App","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","match","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './App.css';\r\nimport HomePage from './pages/homepage/HomePage';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport ShopPage from './pages/shoppage/ShopPage';\r\nimport Header from './component/header/Header';\r\nimport SignInSignUp from './component/sign-in-sign-up/SignInSignUp';\r\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentUser } from './redux/user/user.action'\r\nimport { selectCurrentUser } from './redux/user/user.selectors';\r\nimport { createStructuredSelector } from 'reselect'\r\nimport CheckOut from './pages/checkoutpage/CheckOut';\r\nimport CollectionPage from './pages/collection/CollectionPage';\r\n\r\n\r\nexport class App extends Component {\r\n  unsubscribeFromAuth = null;\r\n\r\n  componentDidMount() {\r\n    const { setCurrentUser } = this.props;\r\n\r\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\r\n\r\n      if (userAuth) {\r\n        const userRef = createUserProfileDocument(userAuth);\r\n\r\n        // update currentUser, .data() does't get id propery, snapshot has id property\r\n        (await userRef).onSnapshot(snapShot => {\r\n          setCurrentUser({\r\n            id: snapShot.id,\r\n            ...snapShot.data()\r\n          });\r\n        });\r\n\r\n      } else {\r\n        setCurrentUser(userAuth);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribeFromAuth();\r\n  }\r\n\r\n  render() {\r\n    const {match} = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch >\r\n          <Route exact path='/' component={HomePage} />\r\n          <Route exact path='/shop' component={ShopPage} />\r\n          <Route path='/shop/:collectionId' component={CollectionPage} />\r\n          <Route exact paht='/checkout' component={CheckOut} />\r\n          <Route exact path='/signin'\r\n            render={() => this.props.currentUser ? (<Redirect to='/' />) : (<SignInSignUp />)} />\r\n          \r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser\r\n})\r\n\r\n// dispatch function is a way for redux to know that whatever object passing in is going to be an action object that redux will passing to every reducer.\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentUser: (user) => dispatch(setCurrentUser(user))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n"]},"metadata":{},"sourceType":"module"}