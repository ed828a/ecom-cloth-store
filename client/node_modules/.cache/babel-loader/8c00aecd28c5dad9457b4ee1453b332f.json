{"ast":null,"code":"/* \r\n  firebase import is in order, \r\n  1. first is import firebase from firebase/app\r\n  2. then you can import firestore under firebase\r\n  3. then you can import auth under firebase\r\n  so firebase is the base of firestore and auth.\r\n*/\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATA_BASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID // measurementId: process.env.REACT_APP_MEASUREMENT_ID\n\n}; // const firebaseConfig = {\n//   apiKey: \"AIzaSyCDU1xBiX07iW74fk-Hle9TM7oF2GwXO-E\",\n//   authDomain: \"webdev-c9039.firebaseapp.com\",\n//   databaseURL: \"https://webdev-c9039.firebaseio.com\",\n//   projectId: \"webdev-c9039\",\n//   storageBucket: \"webdev-c9039.appspot.com\",\n//   messagingSenderId: \"1055330796052\",\n//   appId: \"1:1055330796052:web:9ec8b4ca42650286589d01\",\n//   // measurementId: \"G-7SNP0LP9KW\"\n// };\n// userAuth is just the user input in auth.onAuthStateChanged\n\nexport const createUserProfileDocument = async (userAuth, addtionalData) => {\n  if (!userAuth) return; // if user not sign in, exit \n  // console.log('userAuth: ', userAuth);\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`); // console.log('addtionalData: ', addtionalData);\n\n  const collectionRef = firestore.collection('users');\n  console.log('collectionRef: ', collectionRef);\n\n  try {\n    const snapShot = await userRef.get(); // console.log('firestore return: ', snapShot);\n\n    const collectionSnapshot = await collectionRef.get();\n    console.log('querySnapshot: ', collectionSnapshot);\n    console.log('collection: ', {\n      collection: collectionSnapshot.docs.map(doc => doc.data())\n    });\n\n    if (!snapShot.exists) {\n      // this is the standard to create a node in firestore.\n      const {\n        displayName,\n        email\n      } = userAuth;\n      const createAt = new Date();\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...addtionalData\n      });\n    }\n  } catch (error) {\n    console.log('firestore error when creating user: ', error.message);\n    alert(error.message);\n  }\n\n  return userRef; // in case we still use the userRef to do other things.\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // google Authentication \n\nconst provider = new firebase.auth.GoogleAuthProvider(); // use google pop-up for sign-in\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATA_BASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","createUserProfileDocument","userAuth","addtionalData","userRef","firestore","doc","uid","collectionRef","collection","console","log","snapShot","get","collectionSnapshot","docs","map","data","exists","displayName","email","createAt","Date","set","error","message","alert","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA;;;;;;;AAOA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADC;AAErBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFH;AAGrBC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,uBAHJ;AAIrBC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJF;AAKrBC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,wBALN;AAMrBC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,6BANV;AAOrBC,EAAAA,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYa,gBAPE,CAQrB;;AARqB,CAAvB,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,aAAjB,KAAmC;AAC1E,MAAI,CAACD,QAAL,EAAe,OAD2D,CACnD;AACvB;;AAEA,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB,CAJ0E,CAK1E;;AAEA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,aAA/B;;AAEA,MAAI;AACF,UAAMI,QAAQ,GAAG,MAAMR,OAAO,CAACS,GAAR,EAAvB,CADE,CAEF;;AAEA,UAAMC,kBAAkB,GAAG,MAAMN,aAAa,CAACK,GAAd,EAAjC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,kBAA/B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B;AAACF,MAAAA,UAAU,EAAEK,kBAAkB,CAACC,IAAnB,CAAwBC,GAAxB,CAA4BV,GAAG,IAAIA,GAAG,CAACW,IAAJ,EAAnC;AAAb,KAA5B;;AAEA,QAAG,CAACL,QAAQ,CAACM,MAAb,EAAoB;AAAE;AACpB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAwBlB,QAA9B;AACA,YAAMmB,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;AACA,YAAMlB,OAAO,CAACmB,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,QAHgB;AAIhB,WAAGlB;AAJa,OAAZ,CAAN;AAMD;AACF,GAlBD,CAkBE,OAAOqB,KAAP,EAAc;AACdd,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDa,KAAK,CAACC,OAA1D;AACAC,IAAAA,KAAK,CAACF,KAAK,CAACC,OAAP,CAAL;AACD;;AAED,SAAOrB,OAAP,CAjC0E,CAiC1D;AACjB,CAlCM,C,CAoCP;;AACArB,QAAQ,CAAC4C,aAAT,CAAuB3C,cAAvB;AAEA,OAAO,MAAM4C,IAAI,GAAG7C,QAAQ,CAAC6C,IAAT,EAAb;AACP,OAAO,MAAMvB,SAAS,GAAGtB,QAAQ,CAACsB,SAAT,EAAlB,C,CAEP;;AACA,MAAMwB,QAAQ,GAAG,IAAI9C,QAAQ,CAAC6C,IAAT,CAAcE,kBAAlB,EAAjB,C,CACA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9C,QAAf","sourcesContent":["/* \r\n  firebase import is in order, \r\n  1. first is import firebase from firebase/app\r\n  2. then you can import firestore under firebase\r\n  3. then you can import auth under firebase\r\n  so firebase is the base of firestore and auth.\r\n*/\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore'; \r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATA_BASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  // measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyCDU1xBiX07iW74fk-Hle9TM7oF2GwXO-E\",\r\n//   authDomain: \"webdev-c9039.firebaseapp.com\",\r\n//   databaseURL: \"https://webdev-c9039.firebaseio.com\",\r\n//   projectId: \"webdev-c9039\",\r\n//   storageBucket: \"webdev-c9039.appspot.com\",\r\n//   messagingSenderId: \"1055330796052\",\r\n//   appId: \"1:1055330796052:web:9ec8b4ca42650286589d01\",\r\n//   // measurementId: \"G-7SNP0LP9KW\"\r\n// };\r\n\r\n// userAuth is just the user input in auth.onAuthStateChanged\r\nexport const createUserProfileDocument = async (userAuth, addtionalData) => {\r\n  if (!userAuth) return; // if user not sign in, exit \r\n  // console.log('userAuth: ', userAuth);\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  // console.log('addtionalData: ', addtionalData);\r\n\r\n  const collectionRef = firestore.collection('users');\r\n  console.log('collectionRef: ', collectionRef);\r\n \r\n  try {\r\n    const snapShot = await userRef.get();\r\n    // console.log('firestore return: ', snapShot);\r\n\r\n    const collectionSnapshot = await collectionRef.get();\r\n    console.log('querySnapshot: ', collectionSnapshot);\r\n    console.log('collection: ', {collection: collectionSnapshot.docs.map(doc => doc.data())});\r\n\r\n    if(!snapShot.exists){ // this is the standard to create a node in firestore.\r\n      const { displayName, email} = userAuth;\r\n      const createAt = new Date();\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createAt,\r\n        ...addtionalData\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log('firestore error when creating user: ', error.message);\r\n    alert(error.message);\r\n  }\r\n  \r\n  return userRef; // in case we still use the userRef to do other things.\r\n}\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig); \r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// google Authentication \r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n// use google pop-up for sign-in\r\nprovider.setCustomParameters({ prompt: 'select_account' }); \r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}