{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/HomePage';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport ShopPage from './pages/shoppage/ShopPage';\nimport Header from './component/header/Header';\nimport SignInSignUp from './component/sign-in-sign-up/SignInSignUp';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.action';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport CheckOut from './pages/checkoutpage/CheckOut';\nimport CollectionPage from './pages/collection/CollectionPage';\nexport class App extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n}\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); // dispatch function is a way for redux to know that whatever object passing in is going to be an action object that redux will passing to every reducer.\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/App.js"],"names":["React","Component","HomePage","Switch","Route","Redirect","ShopPage","Header","SignInSignUp","auth","createUserProfileDocument","connect","setCurrentUser","selectCurrentUser","createStructuredSelector","CheckOut","CollectionPage","App","render","mapStateToProps","currentUser","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AAGA,OAAO,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AAGjCiB,EAAAA,MAAM,GAAG;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AAXgC;AAcnC,MAAMC,eAAe,GAAGL,wBAAwB,CAAC;AAC/CM,EAAAA,WAAW,EAAEP;AADkC,CAAD,CAAhD,C,CAIA;;AACA,MAAMQ,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,cAAc,EAAGW,IAAD,IAAUD,QAAQ,CAACV,cAAc,CAACW,IAAD,CAAf;AADM,CAAf,CAA3B;;AAIA,eAAeZ,OAAO,CAACQ,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CJ,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport './App.css';\r\nimport HomePage from './pages/homepage/HomePage';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport ShopPage from './pages/shoppage/ShopPage';\r\nimport Header from './component/header/Header';\r\nimport SignInSignUp from './component/sign-in-sign-up/SignInSignUp';\r\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentUser } from './redux/user/user.action'\r\nimport { selectCurrentUser } from './redux/user/user.selectors';\r\nimport { createStructuredSelector } from 'reselect'\r\nimport CheckOut from './pages/checkoutpage/CheckOut';\r\nimport CollectionPage from './pages/collection/CollectionPage';\r\n\r\n\r\nexport class App extends Component {\r\n  \r\n\r\n  render() {\r\n    \r\n\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser\r\n})\r\n\r\n// dispatch function is a way for redux to know that whatever object passing in is going to be an action object that redux will passing to every reducer.\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentUser: (user) => dispatch(setCurrentUser(user))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n"]},"metadata":{},"sourceType":"module"}