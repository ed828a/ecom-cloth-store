{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types'; // import { signInWithGoogle } from '../../firebase/firebase.utils'\n\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInStart, googleSignInSuccess, googleSignInfailure, emailSignInStart, emailSignInSuccess, emailSignInfailure } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    console.log('user', user);\n  } catch (error) {\n    console.error(error);\n  }\n}\n; // what we want to do: listen to GOOGLE_SIGN_IN_START and trigger our actual sign from the saga.\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\n;","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","googleSignInStart","googleSignInSuccess","googleSignInfailure","emailSignInStart","emailSignInSuccess","emailSignInfailure","signInWithGoogle","user","signInWithPopup","console","log","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B,C,CACA;;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,SACIC,iBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,EAKIC,kBALJ,EAMIC,kBANJ,QAOO,eAPP;AASA,OAAO,UAAUC,gBAAV,GAA8B;AACjC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACU,eAAL,CAAqBX,cAArB,CAAvB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AAEH;AACJ;AAAA,C,CAED;;AACA,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMpB,UAAU,CACZI,eAAe,CAACiB,oBADJ,EAEZP,gBAFY,CAAhB;AAIH;AAAA;AAED,OAAO,UAAUQ,SAAV,GAAsB;AACzB,QAAMpB,GAAG,CAAC,CACNC,IAAI,CAACiB,mBAAD,CADE,CAAD,CAAT;AAGH;AAAA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n// import { signInWithGoogle } from '../../firebase/firebase.utils'\r\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils'\r\n\r\nimport {\r\n    googleSignInStart,\r\n    googleSignInSuccess,\r\n    googleSignInfailure,\r\n    emailSignInStart,\r\n    emailSignInSuccess,\r\n    emailSignInfailure\r\n} from './user.action';\r\n\r\nexport function* signInWithGoogle () {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        console.log('user', user);\r\n    } catch (error) {\r\n        console.error(error);\r\n        \r\n    }\r\n};\r\n\r\n// what we want to do: listen to GOOGLE_SIGN_IN_START and trigger our actual sign from the saga.\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(\r\n        UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n    );\r\n};\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart)\r\n    ]);\r\n};"]},"metadata":{},"sourceType":"module"}