{"ast":null,"code":"/* \r\n  firebase import is in order, \r\n  1. first is import firebase from firebase/app\r\n  2. then you can import firestore under firebase\r\n  3. then you can import auth under firebase\r\n  so firebase is the base of firestore and auth.\r\n*/\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATA_BASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID // measurementId: process.env.REACT_APP_MEASUREMENT_ID\n\n}; // const firebaseConfig = {\n//   apiKey: \"AIzaSyCDU1xBiX07iW74fk-Hle9TM7oF2GwXO-E\",\n//   authDomain: \"webdev-c9039.firebaseapp.com\",\n//   databaseURL: \"https://webdev-c9039.firebaseio.com\",\n//   projectId: \"webdev-c9039\",\n//   storageBucket: \"webdev-c9039.appspot.com\",\n//   messagingSenderId: \"1055330796052\",\n//   appId: \"1:1055330796052:web:9ec8b4ca42650286589d01\",\n//   // measurementId: \"G-7SNP0LP9KW\"\n// };\n// userAuth is just the user input in auth.onAuthStateChanged\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; // if user not sign in, exit \n  // console.log('userAuth: ', userAuth);\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`); // console.log('addtionalData: ', addtionalData);\n\n  try {\n    const snapShot = await userRef.get(); // console.log('firestore return: ', snapShot);\n\n    if (!snapShot.exists) {\n      // this is the standard to create a node in firestore.\n      const {\n        displayName,\n        email\n      } = userAuth;\n      const createdAt = new Date();\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    }\n  } catch (error) {\n    console.log('error creating user', error.message);\n  }\n\n  return userRef; // in case we still use the userRef to do other things.\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider(); // use google pop-up for sign-in\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATA_BASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","firebaseConfig","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA;;;;;;;AAOA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADP;AAEbC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFX;AAGbC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,uBAHZ;AAIbC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJV;AAKbC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,wBALd;AAMbC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,6BANlB;AAObC,EAAAA,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYa,gBAPN,CAQb;;AARa,CAAf,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe,OAD4D,CACpD;AACvB;;AAEA,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB,CAJ2E,CAK3E;;AAEA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CADE,CAEF;;AACA,QAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAE;AACtB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAyBV,QAA/B;AACA,YAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD;AACF,GAbD,CAaE,OAAOa,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;;AACD,SAAOf,OAAP,CAvB2E,CAuB3D;AACjB,CAxBM,C,CA0BP;;AACArB,QAAQ,CAACqC,aAAT,CAAuBC,cAAvB;AAEA,OAAO,MAAMC,IAAI,GAAGvC,QAAQ,CAACuC,IAAT,EAAb;AACP,OAAO,MAAMjB,SAAS,GAAGtB,QAAQ,CAACsB,SAAT,EAAlB;AAEP,MAAMkB,QAAQ,GAAG,IAAIxC,QAAQ,CAACuC,IAAT,CAAcE,kBAAlB,EAAjB,C,CACA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAexC,QAAf","sourcesContent":["/* \r\n  firebase import is in order, \r\n  1. first is import firebase from firebase/app\r\n  2. then you can import firestore under firebase\r\n  3. then you can import auth under firebase\r\n  so firebase is the base of firestore and auth.\r\n*/\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATA_BASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  // measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyCDU1xBiX07iW74fk-Hle9TM7oF2GwXO-E\",\r\n//   authDomain: \"webdev-c9039.firebaseapp.com\",\r\n//   databaseURL: \"https://webdev-c9039.firebaseio.com\",\r\n//   projectId: \"webdev-c9039\",\r\n//   storageBucket: \"webdev-c9039.appspot.com\",\r\n//   messagingSenderId: \"1055330796052\",\r\n//   appId: \"1:1055330796052:web:9ec8b4ca42650286589d01\",\r\n//   // measurementId: \"G-7SNP0LP9KW\"\r\n// };\r\n\r\n// userAuth is just the user input in auth.onAuthStateChanged\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return; // if user not sign in, exit \r\n  // console.log('userAuth: ', userAuth);\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  // console.log('addtionalData: ', addtionalData);\r\n\r\n  try {\r\n    const snapShot = await userRef.get();\r\n    // console.log('firestore return: ', snapShot);\r\n    if (!snapShot.exists) { // this is the standard to create a node in firestore.\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.log('error creating user', error.message);\r\n  }\r\n  return userRef; // in case we still use the userRef to do other things.\r\n}\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n// use google pop-up for sign-in\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}