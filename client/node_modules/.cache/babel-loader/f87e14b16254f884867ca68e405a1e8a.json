{"ast":null,"code":"var _jsxFileName = \"E:\\\\LearnWebDev\\\\CompleteReactCourse\\\\ecom-cloth-store\\\\src\\\\component\\\\cart-icon\\\\cart-icon.component.jsx\";\nimport \"./cart-icon.scss\";\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\n\nfunction CartIcon({\n  toggleCartHidden,\n  itemCount\n}) {\n  // console.log('I am being called');\n  return React.createElement(\"div\", {\n    className: \"cart-icon\",\n    onClick: toggleCartHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(ShoppingIcon, {\n    className: \"shopping-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"item-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, itemCount, \" \"));\n}\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n}); // const mapStateToProps = (state) => {\n//     // console.log('I am being called');\n//     // const { cart: { cartItems } } = state\n//     return ({\n//         // itemCount: cartItems.reduce((accumulatedQuantity, cartItem) => {\n//         //     return accumulatedQuantity + cartItem.quantity;\n//         // }, 0)\n//         itemCount: selectCartItemsCount(state)\n//     });\n// };\n\n\nconst mapStateToProps = createStructuredSelector({\n  itemCount: selectCartItemsCount\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","map":{"version":3,"sources":["E:/LearnWebDev/CompleteReactCourse/ecom-cloth-store/src/component/cart-icon/cart-icon.component.jsx"],"names":["React","connect","toggleCartHidden","selectCartItemsCount","CartIcon","itemCount","mapDispatchToProps","dispatch","mapStateToProps","createStructuredSelector"],"mappings":";AAAA,OAAO,kBAAP;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,oBAAT,QAAqC,iCAArC;;AAEA,SAASC,QAAT,CAAkB;AAAEF,EAAAA,gBAAF;AAAoBG,EAAAA;AAApB,CAAlB,EAAmD;AAC/C;AACA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEH,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BG,SAA9B,MAFJ,CADJ;AAMH;;AAED,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCL,EAAAA,gBAAgB,EAAE,MAAMK,QAAQ,CAACL,gBAAgB,EAAjB;AADI,CAAL,CAAnC,C,CAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMM,eAAe,GAAGC,wBAAwB,CAAC;AAC7CJ,EAAAA,SAAS,EAAEF;AADkC,CAAD,CAAhD;AAIA,eAAeF,OAAO,CAACO,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CF,QAA7C,CAAf","sourcesContent":["import \"./cart-icon.scss\";\r\nimport { ReactComponent as ShoppingIcon } from \"../../assets/shopping-bag.svg\";\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\r\nimport { selectCartItemsCount } from \"../../redux/cart/cart.selectors\";\r\n\r\nfunction CartIcon({ toggleCartHidden, itemCount }) {\r\n    // console.log('I am being called');\r\n    return (\r\n        <div className=\"cart-icon\" onClick={toggleCartHidden}>\r\n            <ShoppingIcon className=\"shopping-icon\" />\r\n            <span className=\"item-count\">{itemCount} </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleCartHidden: () => dispatch(toggleCartHidden())\r\n});\r\n\r\n// const mapStateToProps = (state) => {\r\n//     // console.log('I am being called');\r\n//     // const { cart: { cartItems } } = state\r\n\r\n//     return ({\r\n//         // itemCount: cartItems.reduce((accumulatedQuantity, cartItem) => {\r\n//         //     return accumulatedQuantity + cartItem.quantity;\r\n//         // }, 0)\r\n//         itemCount: selectCartItemsCount(state)\r\n//     });\r\n// };\r\nconst mapStateToProps = createStructuredSelector({\r\n    itemCount: selectCartItemsCount\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\r\n"]},"metadata":{},"sourceType":"module"}